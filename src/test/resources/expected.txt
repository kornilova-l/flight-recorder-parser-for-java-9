void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.hashCode();int java.util.Arrays.deepHashCode(java.lang.Object[]);int java.util.Arrays.hashCode(boolean[]) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BmpCharProperty.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);int java.util.HashMap.hash(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.Set, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.Set) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.lang.Class java.util.HashMap.comparableClassFor(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.Object);java.lang.String java.lang.String.valueOf(java.lang.Object);java.lang.String com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.toString();java.lang.String com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.toHumanReadableSting();void com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.Positions.<clinit>();java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String);java.lang.Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(java.lang.String);java.lang.Class jdk.internal.loader.BuiltinClassLoader.defineClass(java.lang.String, jdk.internal.loader.Resource);java.lang.Class java.security.SecureClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.CodeSource);java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain);java.lang.Class java.lang.ClassLoader.defineClass1(java.lang.ClassLoader, java.lang.String, byte[], int, int, java.security.ProtectionDomain, java.lang.String);java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String);java.lang.Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(java.lang.String);java.lang.Class jdk.internal.loader.BuiltinClassLoader.defineClass(java.lang.String, jdk.internal.loader.Resource);java.lang.Class java.security.SecureClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.CodeSource);java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain);java.lang.Class java.lang.ClassLoader.defineClass1(java.lang.ClassLoader, java.lang.String, byte[], int, int, java.security.ProtectionDomain, java.lang.String);java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String);java.lang.Class jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClass(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(java.lang.String, boolean);java.lang.Class jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(java.lang.String);java.lang.Class jdk.internal.loader.BuiltinClassLoader.defineClass(java.lang.String, jdk.internal.loader.Resource);java.lang.Class java.security.SecureClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.CodeSource);java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain);java.security.ProtectionDomain java.lang.ClassLoader.preDefineClass(java.lang.String, java.security.ProtectionDomain) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap.newTreeNode(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.hashCode();java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.hashCode();int java.util.Objects.hash(java.lang.Object[]);int java.util.Arrays.hashCode(java.lang.Object[]) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.equals(java.lang.Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.equals(java.lang.Object);boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.VertexRule.isIncluded(com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.rule.POSITION);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);boolean java.util.ArrayList.add(java.lang.Object);void java.util.ArrayList.add(java.lang.Object, java.lang.Object[], int);java.lang.Object[] java.util.ArrayList.grow();java.lang.Object[] java.util.ArrayList.grow(int);java.lang.Object[] java.util.Arrays.copyOf(java.lang.Object[], int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$Node[] java.util.HashMap.resize() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches() 23
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 16
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.lookingAt();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$CharPropertyGreedy.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$LastNode.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 16
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);java.util.Iterator kotlin.ranges.IntProgression.iterator();kotlin.collections.IntIterator kotlin.ranges.IntProgression.iterator();void kotlin.ranges.IntProgressionIterator.<init>(int, int, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.regex.Matcher.group(int);java.lang.String java.nio.CharBuffer.toString();java.lang.String java.nio.HeapCharBuffer.toString(int, int) 5
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.find() 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.find();boolean java.util.regex.Matcher.search(int);boolean java.util.regex.Pattern$Start.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$CharPropertyGreedy.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int java.util.AbstractSet.hashCode() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.Set, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.Set);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.lookingAt();boolean java.util.regex.Matcher.match(int, int) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 11
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object, java.util.function.Function);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);boolean java.util.ArrayList.add(java.lang.Object);void java.util.ArrayList.add(java.lang.Object, java.lang.Object[], int);java.lang.Object[] java.util.ArrayList.grow();java.lang.Object[] java.util.ArrayList.grow(int);java.lang.Object[] java.util.Arrays.copyOf(java.lang.Object[], int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);java.lang.Object kotlin.collections.IntIterator.next();java.lang.Integer kotlin.collections.IntIterator.next();int kotlin.ranges.IntProgressionIterator.nextInt() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 5
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 13
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);java.lang.String java.util.regex.Matcher.group();java.lang.String java.util.regex.Matcher.group(int);java.lang.String java.nio.CharBuffer.toString();java.lang.String java.nio.HeapCharBuffer.toString(int, int) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(int, int, int, java.util.Set);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);void java.util.Scanner.readInput();int java.io.Reader.read(java.nio.CharBuffer);int java.io.InputStreamReader.read(char[], int, int);int sun.nio.cs.StreamDecoder.read(char[], int, int);int sun.nio.cs.StreamDecoder.implRead(char[], int, int);java.nio.charset.CoderResult java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer);java.nio.charset.CoderResult sun.nio.cs.UTF_8$Decoder.xflow(java.nio.Buffer, int, int, java.nio.Buffer, int, int);void sun.nio.cs.UTF_8.access$200(java.nio.Buffer, int, java.nio.Buffer, int);void sun.nio.cs.UTF_8.updatePositions(java.nio.Buffer, int, java.nio.Buffer, int) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.<init>(int, int, int, java.util.Set) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$Node[] java.util.HashMap.resize() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int java.util.AbstractSet.hashCode();java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.lookingAt() 9
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.Set, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.Set);int[] kotlin.collections.CollectionsKt___CollectionsKt.toIntArray(java.util.Collection) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 5
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 6
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.find();boolean java.util.regex.Matcher.search(int);boolean java.util.regex.Pattern$Start.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$CharPropertyGreedy.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.CharPredicates$$Lambda$79.1813187653.is(int);boolean java.lang.Character.isWhitespace(int);boolean java.lang.CharacterDataLatin1.isWhitespace(int);int java.lang.CharacterDataLatin1.getProperties(int) 10
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.<init>(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object) 7
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.List com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.solve(java.util.Set, int);jnisat.JPicoSat com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.SatSolverProcessManagerKt.initSat(java.util.Set);int[] kotlin.collections.CollectionsKt___CollectionsKt.toIntArray(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 17
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BmpCharProperty.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$BranchConn.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupTail.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);java.lang.Integer com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph.getId(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile);java.lang.Object org.apache.commons.collections4.bidimap.AbstractDualBidiMap.get(java.lang.Object);java.lang.Object java.util.HashMap.get(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object);boolean com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.Tile.equals(java.lang.Object);java.lang.Object kotlin.collections.IntIterator.next();java.lang.Integer kotlin.collections.IntIterator.next();int kotlin.ranges.IntProgressionIterator.nextInt() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator() 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);int java.util.HashMap$TreeNode.tieBreakOrder(java.lang.Object, java.lang.Object);int java.lang.String.compareTo(java.lang.String);int java.lang.StringLatin1.compareTo(byte[], byte[]) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);int java.util.HashMap$TreeNode.tieBreakOrder(java.lang.Object, java.lang.Object);java.lang.String java.lang.Class.getName() 3
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);void com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.TileSet.<init>(java.io.File);int java.util.Scanner.nextInt();int java.util.Scanner.nextInt(int);java.lang.String java.util.Scanner.next(java.util.regex.Pattern);java.lang.String java.util.Scanner.getCompleteTokenInBuffer(java.util.regex.Pattern);boolean java.util.regex.Matcher.matches();boolean java.util.regex.Matcher.match(int, int);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Ques.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Curly.match2(java.util.regex.Matcher, int, int, java.lang.CharSequence);boolean java.util.regex.Pattern$GroupHead.match(java.util.regex.Matcher, int, java.lang.CharSequence);boolean java.util.regex.Pattern$Branch.match(java.util.regex.Matcher, int, java.lang.CharSequence) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 4
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.formClause(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph$Neighbourhood, java.util.Set, com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);int java.util.HashMap.hash(java.lang.Object);int java.util.AbstractSet.hashCode();java.lang.Object java.util.HashMap$KeyIterator.next();java.util.HashMap$Node java.util.HashMap$HashIterator.nextNode() 2
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);java.util.Iterator java.util.HashSet.iterator();java.util.Iterator java.util.HashMap$KeySet.iterator();void java.util.HashMap$KeyIterator.<init>(java.util.HashMap);void java.util.HashMap$HashIterator.<init>(java.util.HashMap) 26
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);boolean java.util.AbstractSet.equals(java.lang.Object);boolean java.util.AbstractCollection.containsAll(java.util.Collection);boolean java.util.HashSet.contains(java.lang.Object);boolean java.util.HashMap.containsKey(java.lang.Object);java.util.HashMap$Node java.util.HashMap.getNode(int, java.lang.Object) 1
void com.github.kornilova_l.algorithm_synthesis.grid2D.MainKt.main(java.lang.String[]);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.getLabelingFunction(java.util.Set);com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.LabelingFunction com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.tryToFindSolution(java.util.Set, int, int, int);java.util.Set com.github.kornilova_l.algorithm_synthesis.grid2D.vertex_set_generator.VertexSetSolverKt.toDimacs(com.github.kornilova_l.algorithm_synthesis.grid2D.tiles.collections.DirectedTileGraph, java.util.Set);boolean java.util.AbstractCollection.addAll(java.util.Collection);boolean java.util.HashSet.add(java.lang.Object);java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object);java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class);java.util.HashMap$TreeNode java.util.HashMap$TreeNode.find(int, java.lang.Object, java.lang.Class) 7
